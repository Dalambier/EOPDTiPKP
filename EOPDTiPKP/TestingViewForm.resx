<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5/uZaOf/ATiwPY0GRNjhAAAAAElFTkSuQmCC
</value>
  </data>
</root>